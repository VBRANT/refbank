<?xml version="1.0" encoding="UTF-8" ?>

<!--
	Fetches OpenStringPool and RefParse from projects existing in same workspace
-->

<project name="import">
	<target name="fetch" depends="fetch-osp,fetch-rp,fetch-su,fetch-hxu,fetch-gamta,fetch-eio,fetch-gia,fetch-gfa,fetch-bru,fetch-bolo" />
	
	<target name="check-fetch-osp" unless="osp.exists">
		<available property="osp.exists" file="../openstringpool/dist/OpenStringPool.jar"/>
	</target>
	<target name="fetch-osp" depends="check-fetch-osp" if="${osp.exists}">
    	<copy file="../openstringpool/dist/OpenStringPool.jar" todir="${lib.home}" overwrite="true" verbose="false" />
	</target>
	
	<target name="check-fetch-bolo" unless="bolo.exists">
		<available property="bolo.exists" file="../bolo/dist/Bolo.jar"/>
	</target>
	<target name="fetch-bolo" depends="check-fetch-bolo" if="${bolo.exists}">
    	<copy file="../bolo/dist/Bolo.jar" todir="${lib.home}" overwrite="true" verbose="false" />
	</target>
	
	<target name="check-fetch-rp" unless="rp.exists">
		<available property="rp.exists" file="../refparse/dist/RefParse.zip"/>
	</target>
	<target name="fetch-rp" depends="check-fetch-rp" if="${rp.exists}">
    	<copy file="../refparse/dist/RefParse.zip" todir="${res.home}" overwrite="true" verbose="false" />
		<mkdir dir="${res.home}/refParse" />
		<delete dir="$res.home}/refParse/**/**.*" />
		<unzip src="${res.home}/RefParse.zip" dest="${res.home}/refParse">
			<patternset>
				<include name="**/**.*"/>
				<exclude name="LICENSE.txt"/>
				<exclude name="README.txt"/>
			</patternset>
		</unzip>
	   	<copy file="${res.home}/refParse/RefParse.jar" todir="${lib.home}" overwrite="true" verbose="false" />
	</target>
	
	
	<target name="check-fetch-su" unless="su.exists">
		<available property="su.exists" file="../idaho-core/dist/StringUtils.jar"/>
	</target>
	<target name="fetch-su" depends="check-fetch-su" if="${su.exists}">
    	<copy file="../idaho-core/dist/StringUtils.jar" todir="${lib.home}" overwrite="true" verbose="false" />
	</target>
	
	<target name="check-fetch-hxu" unless="hxu.exists">
		<available property="hxu.exists" file="../idaho-core/dist/HtmlXmlUtil.jar"/>
	</target>
	<target name="fetch-hxu" depends="check-fetch-hxu" if="${hxu.exists}">
    	<copy file="../idaho-core/dist/HtmlXmlUtil.jar" todir="${lib.home}" overwrite="true" verbose="false" />
	</target>
	
	<target name="check-fetch-gamta" unless="gamta.exists">
		<available property="gamta.exists" file="../idaho-core/dist/Gamta.jar"/>
	</target>
	<target name="fetch-gamta" depends="check-fetch-gamta" if="${gamta.exists}">
    	<copy file="../idaho-core/dist/Gamta.jar" todir="${lib.home}" overwrite="true" verbose="false" />
	</target>
	
	<target name="check-fetch-eio" unless="eio.exists">
		<available property="eio.exists" file="../idaho-core/dist/EasyIO.jar"/>
	</target>
	<target name="fetch-eio" depends="check-fetch-eio" if="${eio.exists}">
    	<copy file="../idaho-core/dist/EasyIO.jar" todir="${lib.home}" overwrite="true" verbose="false" />
	</target>
	
	
	<target name="check-fetch-gia" unless="gia.exists">
		<available property="gia.exists" file="../idaho-extensions/dist/GamtaImagingAPI.jar"/>
	</target>
	<target name="fetch-gia" depends="check-fetch-gia" if="${gia.exists}">
    	<copy file="../idaho-extensions/dist/GamtaImagingAPI.jar" todir="${lib.home}" overwrite="true" verbose="false" />
	</target>
	
	<target name="check-fetch-gfa" unless="gfa.exists">
		<available property="gfa.exists" file="../idaho-extensions/dist/GamtaFeedbackAPI.jar"/>
	</target>
	<target name="fetch-gfa" depends="check-fetch-gfa" if="${gfa.exists}">
    	<copy file="../idaho-extensions/dist/GamtaFeedbackAPI.jar" todir="${lib.home}" overwrite="true" verbose="false" />
	</target>
	
	<target name="check-fetch-bru" unless="bru.exists">
		<available property="bru.exists" file="../idaho-extensions/dist/BibRefUtils.jar"/>
	</target>
	<target name="fetch-bru" depends="check-fetch-bru" if="${bru.exists}">
    	<copy file="../idaho-extensions/dist/BibRefUtils.jar" todir="${lib.home}" overwrite="true" verbose="false" />
	</target>
</project>